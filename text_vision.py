# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EJwMng6t_6gPA9J32BLjiYvfZ2GMAoS_
"""

import os
from google.cloud import vision
from google.cloud.vision_v1 import types
from google.protobuf.json_format import MessageToDict
from docx import Document
from data_extractor import DataExtractor
import io


from dotenv import load_dotenv, dotenv_values 
load_dotenv() 
api_key = os.getenv('GEMINI_API_KEY')

# Set up Google Cloud credentials
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "key.json"

# def extract_text_from_docx(docx_path):
#     """Extract text from a DOCX file."""
#     document = Document(docx_path)
#     text = []
#     for paragraph in document.paragraphs:
#         text.append(paragraph.text)
#     return "\n".join(text)

def extract_text_from_pdf(content):
    """Extract text from a PDF file using Google Cloud Vision API."""
    client = vision.ImageAnnotatorClient()

    # with io.open(pdf_path, 'rb') as pdf_file:
    #     content = pdf_file.read()
    # content = pdf_file.read()
    # Create a Vision API request for PDF
    # Note the changes in this part
    request = {
        'requests': [{
            'input_config': types.InputConfig(content=content, mime_type='application/pdf'),
            'features': [{'type': vision.Feature.Type.DOCUMENT_TEXT_DETECTION}],
        }]
    }

    # Perform the OCR
    response = client.batch_annotate_files(requests=request['requests'])

    # Process the response
    text = ""
    for file_response in response.responses:
        if file_response.error.message:
            raise Exception(f"Error processing PDF: {file_response.error.message}")
        for page in file_response.responses:
            text += page.full_text_annotation.text

    
    extractor = DataExtractor(api_key)
    # print(text)
    # Extract structured data
    structured_data = extractor.extract_structured_data(text)

    return structured_data

# def extract_text(file_path):
#     """Extract text from a DOCX or PDF file."""
#     if file_path.endswith('.docx'):
#         return extract_text_from_docx(file_path)
#     elif file_path.endswith('.pdf'):
#         return extract_text_from_pdf(file_path)
#     else:
#         raise ValueError("Unsupported file format. Only .docx and .pdf are supported.")

# if __name__ == "__main__":
#     file_path = "temp/OCR.pdf"
#     try:
#         text = extract_text(file_path)
#         print("Extracted Text:")
#         print(text)
#     except Exception as e:
#         print(f"An error occurred: {e}")